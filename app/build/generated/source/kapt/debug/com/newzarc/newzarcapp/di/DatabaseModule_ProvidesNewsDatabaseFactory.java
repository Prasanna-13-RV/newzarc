// Generated by Dagger (https://dagger.dev).
package com.newzarc.newzarcapp.di;

import android.app.Application;
import com.newzarc.newzarcapp.data.db.NewsDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvidesNewsDatabaseFactory implements Factory<NewsDatabase> {
  private final DatabaseModule module;

  private final Provider<Application> contextProvider;

  public DatabaseModule_ProvidesNewsDatabaseFactory(DatabaseModule module,
      Provider<Application> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public NewsDatabase get() {
    return providesNewsDatabase(module, contextProvider.get());
  }

  public static DatabaseModule_ProvidesNewsDatabaseFactory create(DatabaseModule module,
      Provider<Application> contextProvider) {
    return new DatabaseModule_ProvidesNewsDatabaseFactory(module, contextProvider);
  }

  public static NewsDatabase providesNewsDatabase(DatabaseModule instance, Application context) {
    return Preconditions.checkNotNullFromProvides(instance.providesNewsDatabase(context));
  }
}
