// Generated by Dagger (https://dagger.dev).
package com.newzarc.newzarcapp.di;

import com.newzarc.newzarcapp.data.datasource.PostsRemoteDataSource;
import com.newzarc.newzarcapp.domain.repository.PostsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvidesPostsRepositoryFactory implements Factory<PostsRepository> {
  private final RepositoryModule module;

  private final Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider;

  public RepositoryModule_ProvidesPostsRepositoryFactory(RepositoryModule module,
      Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider) {
    this.module = module;
    this.postsRemoteDataSourceProvider = postsRemoteDataSourceProvider;
  }

  @Override
  public PostsRepository get() {
    return providesPostsRepository(module, postsRemoteDataSourceProvider.get());
  }

  public static RepositoryModule_ProvidesPostsRepositoryFactory create(RepositoryModule module,
      Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider) {
    return new RepositoryModule_ProvidesPostsRepositoryFactory(module, postsRemoteDataSourceProvider);
  }

  public static PostsRepository providesPostsRepository(RepositoryModule instance,
      PostsRemoteDataSource postsRemoteDataSource) {
    return Preconditions.checkNotNullFromProvides(instance.providesPostsRepository(postsRemoteDataSource));
  }
}
