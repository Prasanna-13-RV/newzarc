// Generated by Dagger (https://dagger.dev).
package com.newzarc.newzarcapp.di;

import com.newzarc.newzarcapp.data.datasource.NewsLocalDataSource;
import com.newzarc.newzarcapp.data.db.NewsDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalDataModule_ProvidesNewsLocalDataSourceFactory implements Factory<NewsLocalDataSource> {
  private final LocalDataModule module;

  private final Provider<NewsDao> newsDaoProvider;

  public LocalDataModule_ProvidesNewsLocalDataSourceFactory(LocalDataModule module,
      Provider<NewsDao> newsDaoProvider) {
    this.module = module;
    this.newsDaoProvider = newsDaoProvider;
  }

  @Override
  public NewsLocalDataSource get() {
    return providesNewsLocalDataSource(module, newsDaoProvider.get());
  }

  public static LocalDataModule_ProvidesNewsLocalDataSourceFactory create(LocalDataModule module,
      Provider<NewsDao> newsDaoProvider) {
    return new LocalDataModule_ProvidesNewsLocalDataSourceFactory(module, newsDaoProvider);
  }

  public static NewsLocalDataSource providesNewsLocalDataSource(LocalDataModule instance,
      NewsDao newsDao) {
    return Preconditions.checkNotNullFromProvides(instance.providesNewsLocalDataSource(newsDao));
  }
}
