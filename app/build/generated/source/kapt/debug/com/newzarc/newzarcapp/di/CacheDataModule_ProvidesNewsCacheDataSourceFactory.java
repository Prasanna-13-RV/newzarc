// Generated by Dagger (https://dagger.dev).
package com.newzarc.newzarcapp.di;

import com.newzarc.newzarcapp.data.datasource.NewsCacheDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CacheDataModule_ProvidesNewsCacheDataSourceFactory implements Factory<NewsCacheDataSource> {
  private final CacheDataModule module;

  public CacheDataModule_ProvidesNewsCacheDataSourceFactory(CacheDataModule module) {
    this.module = module;
  }

  @Override
  public NewsCacheDataSource get() {
    return providesNewsCacheDataSource(module);
  }

  public static CacheDataModule_ProvidesNewsCacheDataSourceFactory create(CacheDataModule module) {
    return new CacheDataModule_ProvidesNewsCacheDataSourceFactory(module);
  }

  public static NewsCacheDataSource providesNewsCacheDataSource(CacheDataModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesNewsCacheDataSource());
  }
}
