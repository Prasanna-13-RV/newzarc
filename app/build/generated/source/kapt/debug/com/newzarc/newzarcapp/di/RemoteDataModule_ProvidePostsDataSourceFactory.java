// Generated by Dagger (https://dagger.dev).
package com.newzarc.newzarcapp.di;

import com.newzarc.newzarcapp.data.api.PostService;
import com.newzarc.newzarcapp.data.datasource.PostsRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteDataModule_ProvidePostsDataSourceFactory implements Factory<PostsRemoteDataSource> {
  private final RemoteDataModule module;

  private final Provider<PostService> postServiceProvider;

  public RemoteDataModule_ProvidePostsDataSourceFactory(RemoteDataModule module,
      Provider<PostService> postServiceProvider) {
    this.module = module;
    this.postServiceProvider = postServiceProvider;
  }

  @Override
  public PostsRemoteDataSource get() {
    return providePostsDataSource(module, postServiceProvider.get());
  }

  public static RemoteDataModule_ProvidePostsDataSourceFactory create(RemoteDataModule module,
      Provider<PostService> postServiceProvider) {
    return new RemoteDataModule_ProvidePostsDataSourceFactory(module, postServiceProvider);
  }

  public static PostsRemoteDataSource providePostsDataSource(RemoteDataModule instance,
      PostService postService) {
    return Preconditions.checkNotNullFromProvides(instance.providePostsDataSource(postService));
  }
}
