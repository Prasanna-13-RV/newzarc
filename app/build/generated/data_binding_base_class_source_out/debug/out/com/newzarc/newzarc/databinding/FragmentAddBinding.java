// Generated by view binder compiler. Do not edit!
package com.newzarc.newzarc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.newzarc.newzarc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ConstraintLayout addContainer;

  @NonNull
  public final Button addNews;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputLayout newsContent;

  @NonNull
  public final EditText newsContentInput;

  @NonNull
  public final TextInputLayout newsDate;

  @NonNull
  public final EditText newsDateInput;

  @NonNull
  public final TextInputLayout newsDescription;

  @NonNull
  public final EditText newsDescriptionInput;

  @NonNull
  public final TextInputLayout newsImageUrl;

  @NonNull
  public final EditText newsImageUrlInput;

  @NonNull
  public final TextInputLayout newsTitle;

  @NonNull
  public final EditText newsTitleInput;

  private FragmentAddBinding(@NonNull FrameLayout rootView, @NonNull ConstraintLayout addContainer,
      @NonNull Button addNews, @NonNull NestedScrollView nestedScrollView,
      @NonNull TextInputLayout newsContent, @NonNull EditText newsContentInput,
      @NonNull TextInputLayout newsDate, @NonNull EditText newsDateInput,
      @NonNull TextInputLayout newsDescription, @NonNull EditText newsDescriptionInput,
      @NonNull TextInputLayout newsImageUrl, @NonNull EditText newsImageUrlInput,
      @NonNull TextInputLayout newsTitle, @NonNull EditText newsTitleInput) {
    this.rootView = rootView;
    this.addContainer = addContainer;
    this.addNews = addNews;
    this.nestedScrollView = nestedScrollView;
    this.newsContent = newsContent;
    this.newsContentInput = newsContentInput;
    this.newsDate = newsDate;
    this.newsDateInput = newsDateInput;
    this.newsDescription = newsDescription;
    this.newsDescriptionInput = newsDescriptionInput;
    this.newsImageUrl = newsImageUrl;
    this.newsImageUrlInput = newsImageUrlInput;
    this.newsTitle = newsTitle;
    this.newsTitleInput = newsTitleInput;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addContainer;
      ConstraintLayout addContainer = ViewBindings.findChildViewById(rootView, id);
      if (addContainer == null) {
        break missingId;
      }

      id = R.id.addNews;
      Button addNews = ViewBindings.findChildViewById(rootView, id);
      if (addNews == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.newsContent;
      TextInputLayout newsContent = ViewBindings.findChildViewById(rootView, id);
      if (newsContent == null) {
        break missingId;
      }

      id = R.id.newsContentInput;
      EditText newsContentInput = ViewBindings.findChildViewById(rootView, id);
      if (newsContentInput == null) {
        break missingId;
      }

      id = R.id.newsDate;
      TextInputLayout newsDate = ViewBindings.findChildViewById(rootView, id);
      if (newsDate == null) {
        break missingId;
      }

      id = R.id.newsDateInput;
      EditText newsDateInput = ViewBindings.findChildViewById(rootView, id);
      if (newsDateInput == null) {
        break missingId;
      }

      id = R.id.newsDescription;
      TextInputLayout newsDescription = ViewBindings.findChildViewById(rootView, id);
      if (newsDescription == null) {
        break missingId;
      }

      id = R.id.newsDescriptionInput;
      EditText newsDescriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (newsDescriptionInput == null) {
        break missingId;
      }

      id = R.id.newsImageUrl;
      TextInputLayout newsImageUrl = ViewBindings.findChildViewById(rootView, id);
      if (newsImageUrl == null) {
        break missingId;
      }

      id = R.id.newsImageUrlInput;
      EditText newsImageUrlInput = ViewBindings.findChildViewById(rootView, id);
      if (newsImageUrlInput == null) {
        break missingId;
      }

      id = R.id.newsTitle;
      TextInputLayout newsTitle = ViewBindings.findChildViewById(rootView, id);
      if (newsTitle == null) {
        break missingId;
      }

      id = R.id.newsTitleInput;
      EditText newsTitleInput = ViewBindings.findChildViewById(rootView, id);
      if (newsTitleInput == null) {
        break missingId;
      }

      return new FragmentAddBinding((FrameLayout) rootView, addContainer, addNews, nestedScrollView,
          newsContent, newsContentInput, newsDate, newsDateInput, newsDescription,
          newsDescriptionInput, newsImageUrl, newsImageUrlInput, newsTitle, newsTitleInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
