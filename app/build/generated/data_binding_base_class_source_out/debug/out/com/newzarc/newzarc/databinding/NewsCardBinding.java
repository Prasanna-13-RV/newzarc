// Generated by view binder compiler. Do not edit!
package com.newzarc.newzarc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newzarc.newzarc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewsCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ConstraintLayout contentsCard;

  @NonNull
  public final ImageView newsImage;

  @NonNull
  public final TextView newsTitle;

  @NonNull
  public final AppCompatTextView subtitle;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final Button viewButton;

  private NewsCardBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull ConstraintLayout contentsCard, @NonNull ImageView newsImage,
      @NonNull TextView newsTitle, @NonNull AppCompatTextView subtitle,
      @NonNull Button updateButton, @NonNull Button viewButton) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.contentsCard = contentsCard;
    this.newsImage = newsImage;
    this.newsTitle = newsTitle;
    this.subtitle = subtitle;
    this.updateButton = updateButton;
    this.viewButton = viewButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewsCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewsCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.news_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewsCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.contentsCard;
      ConstraintLayout contentsCard = ViewBindings.findChildViewById(rootView, id);
      if (contentsCard == null) {
        break missingId;
      }

      id = R.id.newsImage;
      ImageView newsImage = ViewBindings.findChildViewById(rootView, id);
      if (newsImage == null) {
        break missingId;
      }

      id = R.id.newsTitle;
      TextView newsTitle = ViewBindings.findChildViewById(rootView, id);
      if (newsTitle == null) {
        break missingId;
      }

      id = R.id.subtitle;
      AppCompatTextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.updateButton;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.viewButton;
      Button viewButton = ViewBindings.findChildViewById(rootView, id);
      if (viewButton == null) {
        break missingId;
      }

      return new NewsCardBinding((ConstraintLayout) rootView, cardView, contentsCard, newsImage,
          newsTitle, subtitle, updateButton, viewButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
